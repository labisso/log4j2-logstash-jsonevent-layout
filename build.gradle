apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

description = 'Log4J2 Layout for outputting LogStash json_event format'

version='4.1.0'
group = 'net.logstash.log4j2'


dependencies {

    def log4j2Version = '2.5';
    compile "org.apache.logging.log4j:log4j-api:$log4j2Version"
    compile "org.apache.logging.log4j:log4j-core:$log4j2Version"

    compile "org.apache.commons:commons-csv:1.2"

    // Testing stuff, hamcrest comes first please
    testCompile 'org.hamcrest:hamcrest-all:1.+'
    testCompile 'org.testng:testng:6.+'
    testCompile 'commons-collections:commons-collections:3.+'

    // JACKSON for JSONification
    def jacksonVersion = '2.+'
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jacksonVersion}"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonVersion}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"


    //This JSON Hamcrest Matcher is pretty useful (https://github.com/hertzsprung/hamcrest-json)
    testCompile 'uk.co.datumedge:hamcrest-json:0.+'
}


test {
    useTestNG() {
        excludeGroups 'integration'
    }
}

task integrationTest(type: Test, dependsOn: ['test']) {
    logger.info 'Integration Tests'
    useTestNG() {
    }
    include '**/*IT.class'

    // copy resource over???

    // set a system property for the test JVM(s)

    doFirst {
        logger.info 'Logstash required for integration tests'
        //  start logstash or check for logstash and fail
    }

    doLast {
        //logger.info 'Stop Logstash'
        // stop logstash
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.0.0')
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = 'libs-release-local' // The Artifactory repository key to publish to
            username = "${artifactory_user}" // The publisher user name
            password = "${artifactory_password}" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
        }
    }
    resolve {
        repository {
            repoKey = 'repo'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }

}